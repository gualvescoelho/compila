
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEDIVIDE EQUALS MINUS NUMBER PLUS SEMICOLON TIMES VARIABLEstatements : statements statement\n                  | statementstatement : VARIABLE EQUALS expression SEMICOLONexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBER\n              | VARIABLE'
    
_lr_action_items = {'VARIABLE':([0,1,2,4,5,11,12,13,14,15,],[3,3,-2,-1,6,-3,6,6,6,6,]),'$end':([1,2,4,11,],[0,-2,-1,-3,]),'EQUALS':([3,],[5,]),'NUMBER':([5,12,13,14,15,],[10,10,10,10,10,]),'TIMES':([6,8,9,10,16,17,18,19,],[-11,14,-9,-10,14,14,-7,-8,]),'DIVIDE':([6,8,9,10,16,17,18,19,],[-11,15,-9,-10,15,15,-7,-8,]),'SEMICOLON':([6,7,8,9,10,16,17,18,19,],[-11,11,-6,-9,-10,-4,-5,-7,-8,]),'PLUS':([6,7,8,9,10,16,17,18,19,],[-11,12,-6,-9,-10,-4,-5,-7,-8,]),'MINUS':([6,7,8,9,10,16,17,18,19,],[-11,13,-6,-9,-10,-4,-5,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,],[2,4,]),'expression':([5,],[7,]),'term':([5,12,13,],[8,16,17,]),'factor':([5,12,13,14,15,],[9,9,9,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','PyCalc.py',41),
  ('statements -> statement','statements',1,'p_statements','PyCalc.py',42),
  ('statement -> VARIABLE EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','PyCalc.py',50),
  ('expression -> expression PLUS term','expression',3,'p_expression','PyCalc.py',54),
  ('expression -> expression MINUS term','expression',3,'p_expression','PyCalc.py',55),
  ('expression -> term','expression',1,'p_expression','PyCalc.py',56),
  ('term -> term TIMES factor','term',3,'p_term','PyCalc.py',67),
  ('term -> term DIVIDE factor','term',3,'p_term','PyCalc.py',68),
  ('term -> factor','term',1,'p_term','PyCalc.py',69),
  ('factor -> NUMBER','factor',1,'p_factor','PyCalc.py',80),
  ('factor -> VARIABLE','factor',1,'p_factor','PyCalc.py',81),
]
